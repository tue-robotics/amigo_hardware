import("amigo_pera_controller_dev")
trigger

stream("DigitalIns1.out6",hardware_ROStopics.emergency_switch)

### Read reference joint angles ###
loadComponent("LPERA_ReadReferenceAngles","PERA::ReadArmJointsMsg")
LPERA_ReadReferenceAngles.offsets = array ( 0.0, 1.570796325, 0.0, 0.0, 0.0, 1.570796325, 0.0, 0.0 )
LPERA_ReadReferenceAngles.signs = array ( 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0 )
LPERA_ReadReferenceAngles.configure

#### Interpolator ###
loadComponent("LPERA_ReferenceInterpolator","ReferenceGenerator")
LPERA_ReferenceInterpolator.setPeriod(0.004)
LPERA_ReferenceInterpolator.NrInterpolators = 8
LPERA_ReferenceInterpolator.InterpolatorDt = 0.004
LPERA_ReferenceInterpolator.InterpolatorEps = 1.0
LPERA_ReferenceInterpolator.configure
LPERA_ReferenceInterpolator.interpolator1 = array (0.0, 0.43, 0.2)
LPERA_ReferenceInterpolator.interpolator2 = array (0.0, 0.43, 0.2)
LPERA_ReferenceInterpolator.interpolator3 = array (0.0, 0.6, 0.25)
LPERA_ReferenceInterpolator.interpolator4 = array (0.0, 0.5, 0.2)
LPERA_ReferenceInterpolator.interpolator5 = array (0.0, 0.35, 0.15)
LPERA_ReferenceInterpolator.interpolator6 = array (0.0, 0.3, 0.15)
LPERA_ReferenceInterpolator.interpolator7 = array (0.0, 0.3, 0.15)
LPERA_ReferenceInterpolator.interpolator8 = array (0.0, 0.4, 0.1)

### PERA USB IO ###
loadComponent("LPERA_IO","PERA::PERA_USB_IO")
LPERA_IO.setPeriod(0.004)
LPERA_IO.configure
LPERA_IO.absSenJumpPosProperty = array (1024.0, 732.0, 721.0, 1024.0, 706.0, 1024.0, 1024.0)
LPERA_IO.afterAbsSenJumpProperty = array (0.0, 100.0, 250.0, 0.0, 100.0, 0.0, 0.0)

### Decouple motor angles to joint angles (includes encoder conversion factors --> DEGREES!!!) ###
loadComponent("LPERA_MotorToJointAngles","MatrixTransform")
LPERA_MotorToJointAngles.Nrows = 8
LPERA_MotorToJointAngles.Ncolumns = 8
LPERA_MotorToJointAngles.configure
LPERA_MotorToJointAngles.function1 = array (0.00000563, -0.00000563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
LPERA_MotorToJointAngles.function2 = array (-0.00000563, -0.00000563, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
LPERA_MotorToJointAngles.function3 = array (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.00001653, 0.0)
LPERA_MotorToJointAngles.function4 = array (0.0, 0.0, 0.000003835, 0.000003835, 0.0, 0.0, 0.0, 0.0)
LPERA_MotorToJointAngles.function5 = array (0.0, 0.0, -0.000003835, 0.000003835, 0.0, 0.0, 0.0, 0.0)
LPERA_MotorToJointAngles.function6 = array (0.0, 0.0, 0.0, 0.0, 0.00002116, 0.00002116, 0.0, 0.0)
LPERA_MotorToJointAngles.function7 = array (0.0, 0.0, 0.0, 0.0, 0.00002116, -0.00002116, 0.0, 0.0)
# Compensated for lower encoder resolution on left PERA
LPERA_MotorToJointAngles.function8 = array (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0005236)

### Compute the errors of the joints wrt reference angles ###
loadComponent("LPERA_ComputeJointErrors","Substraction")
LPERA_ComputeJointErrors.vectorsize = 8
LPERA_ComputeJointErrors.configure

### Decouple joint torques to motor torques ###
loadComponent("LPERA_JointToMotorTorques","MatrixTransform")
LPERA_JointToMotorTorques.Nrows = 8
LPERA_JointToMotorTorques.Ncolumns = 8
LPERA_JointToMotorTorques.configure
LPERA_JointToMotorTorques.function1 = array (0.5, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
LPERA_JointToMotorTorques.function2 = array (-0.5, -0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
LPERA_JointToMotorTorques.function3 = array (0.0, 0.0, 0.0, 0.5, -0.5, 0.0, 0.0, 0.0)
LPERA_JointToMotorTorques.function4 = array (0.0, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0)
LPERA_JointToMotorTorques.function5 = array (0.0, 0.0, 0.0, 0.0, 0.0, 0.5, 0.5, 0.0)
LPERA_JointToMotorTorques.function6 = array (0.0, 0.0, 0.0, 0.0, 0.0, 0.5, -0.5, 0.0)
LPERA_JointToMotorTorques.function7 = array (0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)
LPERA_JointToMotorTorques.function8 = array (0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)

### PERA Controllers ###
loadComponent("LPERA_JointControllers","FILTERS::PIDs")
LPERA_JointControllers.proportional_coefficient = array (1000.0, 	1000.0, 700.0, 	700.0, 	350.0, 	550.0, 	550.0, 	160.0)
LPERA_JointControllers.integral_coefficient = 	array (80.0, 	80.0, 	16.0, 	32.0, 	12.0, 	32.0, 	32.0, 	2.0)
LPERA_JointControllers.derivative_coefficient = 	array (40.0, 	40.0, 	16.0, 	20.0, 	16.0, 	4.0, 	4.0, 	0.05)
LPERA_JointControllers.anti_windup_coefficient = 	array (0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0)
LPERA_JointControllers.integrator_initial_value = array (0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0, 	0.0)
LPERA_JointControllers.limit = 					array (5000.0, 	5000.0, 5000.0, 5000.0, 5000.0, 5000.0, 5000.0, 5000.0)
LPERA_JointControllers.sampling_time = 0.004
LPERA_JointControllers.vector_size = 8
LPERA_JointControllers.configure

### Actuator constant ###
loadComponent("LPERA_ActuatorConstant","MATH::Gain")
LPERA_ActuatorConstant.vectorsize = 8
LPERA_ActuatorConstant.gain = 1000.0
LPERA_ActuatorConstant.configure

### Saturation on the controller output ###
loadComponent("LPERA_OutputLimiter","DISCONTINUITIES::Saturation")
#LPERA_OutputLimiter.upper_limit = array ( 25000.0, 25000.0, 20000.0, 20000.0, 15000.0, 15000.0, 25000.0, 32000.0 )
LPERA_OutputLimiter.upper_limit = array ( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 )
#LPERA_OutputLimiter.lower_limit = array ( -25000.0,-25000.0, -20000.0, -20000.0, -15000.0, -15000.0, -25000.0, -32000.0 )
LPERA_OutputLimiter.lower_limit = array ( -0.0,-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0 )
LPERA_OutputLimiter.vector_size = 8
LPERA_OutputLimiter.configure

### Setting up reporting ###
loadComponent("LPERA_Reporter", "OCL::FileReporting")
addPeer("LPERA_Reporter","LPERA_ReferenceInterpolator")
LPERA_Reporter.reportPort("LPERA_ReferenceInterpolator","posout")
addPeer("LPERA_Reporter","LPERA_ComputeJointErrors")
LPERA_Reporter.reportPort("LPERA_ComputeJointErrors","out")
addPeer("LPERA_Reporter","LPERA_OutputLimiter")
LPERA_Reporter.reportPort("LPERA_OutputLimiter","out")
addPeer("LPERA_Reporter","LPERA_ActuatorConstant")
LPERA_Reporter.reportPort("LPERA_ActuatorConstant","out")
addPeer("LPERA_Reporter","LPERA_MotorToJointAngles")
LPERA_Reporter.reportPort("LPERA_MotorToJointAngles","out")
LPERA_Reporter.ReportFile = "/home/amigo/lpera_wrist_test4.dat"
LPERA_Reporter.configure

### Component for streaming port data on a rostopic for visualisation with rxplot ###
loadComponent("LPERA_PlotData","AMIGO::PlotData")
LPERA_PlotData.selectJoint = 5
LPERA_PlotData.selectMotor1 = 4
LPERA_PlotData.selectMotor2 = 5
LPERA_PlotData.setPeriod(0.02)
LPERA_PlotData.configure

### Ports and streams for control and watchdog ###
connect ("LPERA_ReadReferenceAngles.pos","LPERA_ReferenceInterpolator.posin", ConnPolicy() )
connect ("LPERA_ReferenceInterpolator.posout","LPERA_ComputeJointErrors.in_plus", ConnPolicy() )
connect ("LPERA_MotorToJointAngles.out","LPERA_ComputeJointErrors.in_minus", ConnPolicy() )
connect ("LPERA_ComputeJointErrors.out","LPERA_JointControllers.in", ConnPolicy() )
connect ("LPERA_JointControllers.out","LPERA_ActuatorConstant.in", ConnPolicy() )
connect ("LPERA_ActuatorConstant.out","LPERA_JointToMotorTorques.in", ConnPolicy() )
connect ("LPERA_JointToMotorTorques.out","LPERA_OutputLimiter.in", ConnPolicy() )
connect ("LPERA_OutputLimiter.out","LPERA_IO.cmdTorqueIn", ConnPolicy() )
connect ("LPERA_IO.relEnc","LPERA_MotorToJointAngles.in", ConnPolicy() )

### Ports and stream for online data viewing using rxplot ###
connect ("LPERA_ReferenceInterpolator.posout",	"LPERA_PlotData.port1",					ConnPolicy() )
connect ("LPERA_MotorToJointAngles.out",	"LPERA_PlotData.port2",					ConnPolicy() )
connect ("LPERA_ComputeJointErrors.out",	"LPERA_PlotData.port5",					ConnPolicy() )
connect ("LPERA_IO.relEnc",		            "LPERA_PlotData.port6",					ConnPolicy() )
connect ("LPERA_OutputLimiter.out",		 	"LPERA_PlotData.port8",					ConnPolicy() )

# Copy this statement into a terminal for online data viewing
#rxplot /jointDataLeft/data[0],/jointDataLeft/data[1] /jointDataLeft/data[4] /jointDataLeft/data[8],/jointDataLeft/data[9] /jointDataLeft/data[6],/jointDataLeft/data[7]
stream  ("LPERA_PlotData.dataPort", lpera_ROStopics.jointDataLeft)

LPERA_ReadReferenceAngles.start
LPERA_ReferenceInterpolator.start
LPERA_MotorToJointAngles.start
LPERA_ComputeJointErrors.start
LPERA_JointToMotorTorques.start
LPERA_JointControllers.start
LPERA_ActuatorConstant.start
LPERA_OutputLimiter.start
LPERA_IO.start
LPERA_Reporter.start
LPERA_PlotData.start
