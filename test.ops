########################################################################
#                                                                      #
# Controller TEST				 									   #
#                                                                      #
# Max Baeten                                                           #
# Mostly 2011                                                          #
#                                                                      #
########################################################################

#### Importing components ####
import("rtt_ros")
import("rtt_control_components")
import("soem_master")
import("soem_beckhoff_drivers")
import("tue_ethercat_drivers")

#### DECLARATION OF PARAMETERS ####
var double TS = 0.001
var double GEARRATIO 		= 8.0/343.0 ;## to do check param
var double TWOPI 			= 2.0*3.141592
var double ENCODERCOUNTS 	= 500.0*4.0
var double ENC2SI 			= TWOPI*GEARRATIO/ENCODERCOUNTS
var uint ENCBITS			= 65536
var uint N					= 3

#### DECLARATION OF COMPONENTS ####

### SOEM ###
loadComponent("Soem","soem_master::SoemMasterComponent")
Soem.configure
setActivity("Soem",TS,HighestPriority,ORO_SCHED_RT)

### Constant Bool (Fake safety) ###
loadComponent("ConstantGoal","SOURCES::ConstantSignal")
setActivity("ConstantGoal",TS,HighestPriority,ORO_SCHED_RT)
ConstantGoal.vector_size	= N
ConstantGoal.value 			= array(0.0, 0.0, 0.0)
ConstantGoal.configure

### REFERENCE INTERPOLATOR ###
loadComponent("RefInt","SOURCES::ReferenceGenerator")
setActivity("RefInt",TS,HighestPriority,ORO_SCHED_RT)
RefInt.NrInterpolators 		= N
RefInt.InterpolatorDt 		= TS
RefInt.InterpolatorEps 		= 1.0
RefInt.configure
RefInt.interpolator1 		= array (0.0, 0.6, 0.3)
RefInt.interpolator2 		= array (0.0, 0.6, 0.3)
RefInt.interpolator3 		= array (0.0, 0.6, 0.3)

### Constant Bool (Fake safety) ###
loadComponent("FakeSafety","SOURCES::ConstantBool")
setActivity("FakeSafety",TS,HighestPriority,ORO_SCHED_RT)
FakeSafety.value 			= true
FakeSafety.configure

### READ WHEEL ENCODERS ###
loadComponent("ReadEncoders","SOEM::ReadEncoders")
setActivity("ReadEncoders",TS,HighestPriority,ORO_SCHED_RT)
ReadEncoders.encoderbits 	= ENCBITS
ReadEncoders.enc2SI 		= array (ENC2SI, ENC2SI, ENC2SI)
ReadEncoders.configure

### Negative feedback controller ###
loadComponent("Controller","FILTERS::Controller")
setActivity("Controller",0.0,HighestPriority,ORO_SCHED_RT)
Controller.vector_size    				= N
Controller.gains						= array(20000.0, 	20000.0, 	10000.0)
Controller.controllers					= strings("WeakIntegrator","LeadLag","LowPass")
Controller.sampling_time				= TS
Controller.max_errors					= array (1.0, 		1.0, 		1.0)
Controller.motor_saturation				= array (1000.0, 	1000.0,	 	400.0)
Controller.max_sat_time					= 5.0
Controller.zero_freq_WeakIntegrator		= array(0.0065,	  	0.0065,		0.009)
Controller.zero_freq_LeadLag			= array(25.0, 		25.0, 		15.0)
Controller.pole_freq_LeadLag			= array(80.0, 		80.0, 		40.0)
Controller.pole_freq_LowPass			= array(125.0, 		125.0, 		125.0)
Controller.pole_damp_LowPass			= array(0.7, 		0.7, 		0.7)
Controller.configure

#### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("AnalogOuts","SOEM::AnalogOutsGeneric")
setActivity("AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
AnalogOuts.numberofinports    				= 1
AnalogOuts.numberofoutports    				= 1
AnalogOuts.input_sizes 						= array (3.0)
AnalogOuts.output_sizes 					= array (3.0)
AnalogOuts.output_positions 				= array (1.0, 1.0, 1.0)
AnalogOuts.configure

### Setting up tracing ###
loadComponent("Tracing","Signal::Tracing")
setActivity("Tracing",0.0,HighestPriority,ORO_SCHED_RT)
Tracing.vector_sizes = array (3.0, 3.0, 3.0)
Tracing.buffersize =  25000;
Tracing.filename = "/home/maxbaeten/ros/data/hardware_tracing/max/230914/singlemotortest1.dat"
Tracing.Ts = TS
Tracing.configure
connect ("RefInt.posout","Tracing.in1", ConnPolicy()) 		;# Reference
connect ("ReadEncoders.out","Tracing.in2", ConnPolicy()) 	;# Position
connect ("Controller.out","Tracing.in3", ConnPolicy()) 		;# Control output

#### DECLARATION OF CONECTIONS ####
connect ("Soem.Slave_1002.encoder1","ReadEncoders.enc1_in", ConnPolicy()) 
connect ("Soem.Slave_1002.encoder2","ReadEncoders.enc2_in", ConnPolicy()) 
connect ("Soem.Slave_1002.encoder3","ReadEncoders.enc3_in", ConnPolicy()) 
connect ("ReadEncoders.out","Controller.pos_in", ConnPolicy())
connect ("ConstantGoal.out","RefInt.posin", ConnPolicy()) 
connect ("RefInt.posout","Controller.ref_in", ConnPolicy()) 
connect ("Controller.out","AnalogOuts.in1", ConnPolicy()) 
connect ("AnalogOuts.out1","Soem.Slave_1002.pwmDutyMotors", ConnPolicy() );
connect ("FakeSafety.out", "Soem.Slave_1002.enablePort", ConnPolicy() );

### STARTING OF COMPONENTS ####
Soem.start()
ReadEncoders.start()
Controller.start()
RefInt.start()
AnalogOuts.start()
FakeSafety.start()
ConstantGoal.start()
Tracing.start()

