########################################################################
#                                                                      #
# Simple Open EtherCAT Master (SOEM) deployer file 		       		   #
#                                                                      #
#                                                                      #
#                                                                      #
#                                                                      #
########################################################################

#### IMPORT PACKAGE ####
import("rtt_ros")
ros.import("amigo_hardware")

#### DECLARATION OF PARAMETERS ####
var double TS 					= 0.001
var string LEFT_ARM_SHOULDER 	= "Soem.Slave_1012"
var string LEFT_ARM_UPPERARM 	= "Soem.Slave_1013"
var string LEFT_ARM_LOWERARM 	= "Soem.Slave_1014"
var string RIGHT_ARM_SHOULDER 	= "Soem.Slave_1015"
var string RIGHT_ARM_UPPERARM 	= "Soem.Slave_1016"
var string RIGHT_ARM_LOWERARM 	= "Soem.Slave_1017"
		
#### MAKING PARAMETERS GLOBAL #### to do find a way to add a doubles/ints globally
loadService("HARDWARE","os")
os.setenv("LEFT_ARM_SHOULDER",LEFT_ARM_SHOULDER)
os.setenv("LEFT_ARM_UPPERARM",LEFT_ARM_UPPERARM)
os.setenv("LEFT_ARM_LOWERARM",LEFT_ARM_LOWERARM)
os.setenv("RIGHT_ARM_SHOULDER",RIGHT_ARM_SHOULDER)
os.setenv("RIGHT_ARM_UPPERARM",RIGHT_ARM_UPPERARM)
os.setenv("RIGHT_ARM_LOWERARM",RIGHT_ARM_LOWERARM)

#### LOAD SUPERVISOR ###
loadComponent("Supervisor","SUPERVISORY::Supervisor")
Supervisor.ebuttonorder	= strings("Wired","Wireless")
Supervisor.configure
setActivity("Supervisor",0.04,HighestPriority,ORO_SCHED_RT)
stream("Supervisor.ebuttonWired", ros.topic("/amigo/runstop"))
stream("Supervisor.ebuttonWireless", ros.topic("/amigo/emergency_switch"))
stream("Supervisor.rosshutdown", ros.topic("/amigo/etherCAT_shutdown")); 
stream("Supervisor.rosetherCATenabled", ros.topic("/amigo/etherCAT_enabled")); 
stream("Supervisor.hardware_status", ros.topic("/amigo/hardware_status"));
stream("Supervisor.dashboardCmd", ros.topic("/amigo/dashboard_ctrlcmds"));
stream("Supervisor.ebutton_status", ros.topic("/amigo/ebutton_status"));

#### Create Robot Object ####
var strings DEFAULT_PART_NAMES = strings("base","spindle","left_arm", "right_arm", "head")
Supervisor.CreateRobotObject("amigo", DEFAULT_PART_NAMES)

#### LOAD JOINTSTATEAGGREGATOR ####
loadComponent("JointStateAggregator","ROS::JointStateAggregator")
addPeer("Supervisor","JointStateAggregator")
setActivity("JointStateAggregator",0.02,LowestPriority, ORO_SCHED_OTHER)
JointStateAggregator.configure
stream("JointStateAggregator.out", ros.topic("/amigo/joint_states"))

### LOAD SOEM COMPONENT FOR ETHERCAT COMMUNICATION ###
loadComponent("Soem","soem_master::SoemMasterComponent")
addPeer("Supervisor","Soem")
Soem.configure
setActivity("Soem",TS,HighestPriority,ORO_SCHED_RT)
connect ("Soem.Slave_1002.Slave_1002_value", "Supervisor.serialRunning", ConnPolicy() )

#### LOAD COMPONENT TO ENABLE ANALOG OUTS ### 
loadComponent("BASESPINDLE_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","BASESPINDLE_AnalogOuts")
setActivity("BASESPINDLE_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
BASESPINDLE_AnalogOuts.numberofinports    			= 2
BASESPINDLE_AnalogOuts.numberofoutports    			= 1
BASESPINDLE_AnalogOuts.input_sizes 					= array (4.0, 1.0)
BASESPINDLE_AnalogOuts.output_sizes 				= array (8.0)
BASESPINDLE_AnalogOuts.output_positions 			= array (1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)
BASESPINDLE_AnalogOuts.configure
connect ("BASESPINDLE_AnalogOuts.out1","Soem.Slave_100d.values", ConnPolicy() );

##### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("RPERA_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","RPERA_AnalogOuts")
setActivity("RPERA_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
RPERA_AnalogOuts.numberofinports    				= 1
RPERA_AnalogOuts.numberofoutports    				= 3
RPERA_AnalogOuts.input_sizes 						= array (8.0)
RPERA_AnalogOuts.output_sizes 						= array (3.0, 3.0, 3.0)
RPERA_AnalogOuts.output_positions 					= array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
RPERA_AnalogOuts.configure
connect ("RPERA_AnalogOuts.out1",RIGHT_ARM_SHOULDER+".pwmDutyMotors", ConnPolicy() );
connect ("RPERA_AnalogOuts.out2",RIGHT_ARM_UPPERARM+".pwmDutyMotors", ConnPolicy() );
connect ("RPERA_AnalogOuts.out3",RIGHT_ARM_LOWERARM+".pwmDutyMotors", ConnPolicy() );

#### LOAD COMPONENT TO ENABLE ANALOG OUTS PERA ###
loadComponent("LPERA_AnalogOuts","SOEM::AnalogOutsGeneric")
addPeer("Supervisor","LPERA_AnalogOuts")
setActivity("LPERA_AnalogOuts",0.0,HighestPriority,ORO_SCHED_RT)
LPERA_AnalogOuts.numberofinports    				= 1
LPERA_AnalogOuts.numberofoutports    				= 3
LPERA_AnalogOuts.input_sizes 						= array (8.0)
LPERA_AnalogOuts.output_sizes 						= array (3.0, 3.0, 3.0)
LPERA_AnalogOuts.output_positions 					= array (1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)
LPERA_AnalogOuts.configure
connect ("LPERA_AnalogOuts.out1",LEFT_ARM_SHOULDER+".pwmDutyMotors", ConnPolicy() );
connect ("LPERA_AnalogOuts.out2",LEFT_ARM_UPPERARM+".pwmDutyMotors", ConnPolicy() );
connect ("LPERA_AnalogOuts.out3",LEFT_ARM_LOWERARM+".pwmDutyMotors", ConnPolicy() );

#### LOAD COMPONENT TO ENABLE ANALOG INS ###
loadComponent("BATTERY_AnalogIns","SOEM::AnalogInsGeneric")
addPeer("Supervisor","BATTERY_AnalogIns")
setActivity("BATTERY_AnalogIns",1.0,LowestPriority,ORO_SCHED_OTHER)
BATTERY_AnalogIns.inport_dimensions                                     = array (1.0)
BATTERY_AnalogIns.outport_dimensions                                    = array (1.0)
BATTERY_AnalogIns.from_which_inport                                     = array (1.0)
BATTERY_AnalogIns.from_which_entry                                      = array (1.0)
BATTERY_AnalogIns.configure
connect ("Soem.Slave_100e.values","BATTERY_AnalogIns.beckhoffmsg_in_1", ConnPolicy() );
stream("BATTERY_AnalogIns.rosmsg_out_1", ros.topic("/amigo/battery_value"))

##### LOAD COMPONENT TO ENABLE ANALOG INS PERA ###
loadComponent("RPERA_AnalogIns","SOEM::AnalogInsGeneric")
addPeer("Supervisor","RPERA_AnalogIns")
setActivity("RPERA_AnalogIns",TS,HighestPriority,ORO_SCHED_RT)
RPERA_AnalogIns.inport_dimensions                                       = array (3.0, 3.0, 3.0, 3.0, 3.0, 3.0)
RPERA_AnalogIns.outport_dimensions                                      = array (8.0, 8.0)
RPERA_AnalogIns.from_which_inport                                       = array (1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0)
RPERA_AnalogIns.from_which_entry                                        = array (1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0, 1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0)
RPERA_AnalogIns.configure
connect (RIGHT_ARM_SHOULDER+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_1", ConnPolicy() )
connect (RIGHT_ARM_UPPERARM+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_2", ConnPolicy() )
connect (RIGHT_ARM_LOWERARM+".forceSensors","RPERA_AnalogIns.beckhoffmsg_in_3", ConnPolicy() )
connect (RIGHT_ARM_SHOULDER+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_4", ConnPolicy() )
connect (RIGHT_ARM_UPPERARM+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_5", ConnPolicy() )
connect (RIGHT_ARM_LOWERARM+".positionSensors","RPERA_AnalogIns.beckhoffmsg_in_6", ConnPolicy() )

#### LOAD COMPONENT TO ENABLE ANALOG INS PERA ###
loadComponent("LPERA_AnalogIns","SOEM::AnalogInsGeneric")
addPeer("Supervisor","LPERA_AnalogIns")
setActivity("LPERA_AnalogIns",TS,HighestPriority,ORO_SCHED_RT)
LPERA_AnalogIns.inport_dimensions                                       = array (3.0, 3.0, 3.0, 3.0, 3.0, 3.0)
LPERA_AnalogIns.outport_dimensions                                      = array (8.0, 8.0)
LPERA_AnalogIns.from_which_inport                                       = array (1.0, 1.0, 2.0, 2.0, 2.0, 3.0, 3.0, 3.0, 4.0, 4.0, 5.0, 5.0, 5.0, 6.0, 6.0, 6.0)
LPERA_AnalogIns.from_which_entry                                        = array (1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0, 1.0, 2.0, 1.0, 2.0, 3.0, 1.0, 2.0, 3.0)
LPERA_AnalogIns.configure
connect (LEFT_ARM_SHOULDER+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_1", ConnPolicy() )
connect (LEFT_ARM_UPPERARM+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_2", ConnPolicy() )
connect (LEFT_ARM_LOWERARM+".forceSensors","LPERA_AnalogIns.beckhoffmsg_in_3", ConnPolicy() )
connect (LEFT_ARM_SHOULDER+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_4", ConnPolicy() )
connect (LEFT_ARM_UPPERARM+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_5", ConnPolicy() )
connect (LEFT_ARM_LOWERARM+".positionSensors","LPERA_AnalogIns.beckhoffmsg_in_6", ConnPolicy() )

#### LOAD COMPONENT TO ENABLE DIGITAL OUTS (Slave_100b) ###
loadComponent("DigitalOuts","SOEM::DigitalOuts")
addPeer("Supervisor","DigitalOuts")
connect ("DigitalOuts.digital_out","Soem.Slave_100b.bits", ConnPolicy() )
DigitalOuts.configure
setActivity("DigitalOuts",0.0,HighestPriority/2,ORO_SCHED_RT)

#### LOAD COMPONENT TO ENABLE DIGITAL OUTS 2 (Slave_100c) ###
loadComponent("DigitalOuts2","SOEM::DigitalOuts")
addPeer("Supervisor","DigitalOuts2")
connect ("DigitalOuts2.digital_out","Soem.Slave_100c.bits", ConnPolicy() )
DigitalOuts2.configure
setActivity("DigitalOuts2",0.0,HighestPriority/2,ORO_SCHED_RT)

#### LOAD COMPONENT TO ENABLE DIGITAL INS (Slave_1009) ###
loadComponent("DigitalIns","SOEM::DigitalIns")
addPeer("Supervisor","DigitalIns")
DigitalIns.configure
setActivity("DigitalIns",0.1,LowestPriority,ORO_SCHED_OTHER)
connect ("Soem.Slave_1009.bits", "DigitalIns.in", ConnPolicy() )
stream("DigitalIns.out1", ros.topic("/amigo/fuse1"))
stream("DigitalIns.out2", ros.topic("/amigo/fuse2"))
stream("DigitalIns.out3", ros.topic("/amigo/fuse3"))
stream("DigitalIns.out4", ros.topic("/amigo/fuse4"))
DigitalIns.flip_out5 = 1
stream("DigitalIns.out5", ros.topic("/amigo/runstop"))
DigitalIns.flip_out6 = 1
stream("DigitalIns.out6", ros.topic("/amigo/emergency_switch"))

#### LOAD COMPONENT TO ENABLE DIGITAL INS (Slave_100a) ###
loadComponent("DigitalIns2","SOEM::DigitalIns")
addPeer("Supervisor","DigitalIns2")
DigitalIns2.configure
setActivity("DigitalIns2",TS,HighestPriority,ORO_SCHED_RT)
connect ("Soem.Slave_100a.bits", "DigitalIns2.in", ConnPolicy() )
stream("DigitalIns2.out1", ros.topic("/amigo/spindle_homeswitch") )
stream("DigitalIns2.out2", ros.topic("/amigo/spindle_endstop") )

#### LOAD COMPONENT TO ENABLE AMPLIFIERS (D04) ####
loadComponent("EnableAmps","SOURCES::ConstantBool")
addPeer("Supervisor","EnableAmps")
setActivity("EnableAmps",TS,HighestPriority,ORO_SCHED_RT)
EnableAmps.configure
EnableAmps.value = true
connect ("EnableAmps.out", "DigitalOuts.in1", ConnPolicy() ); # Enable amps (D04:DO1)
connect ("EnableAmps.out", "DigitalOuts.in2", ConnPolicy() ); # tue-logo

#### START COMPONENTS ####
Supervisor.AddAllwaysOnPeer ("JointStateAggregator")
Supervisor.AddAllwaysOnPeer ("BASESPINDLE_AnalogOuts")
Supervisor.AddAllwaysOnPeer ("RPERA_AnalogOuts")
Supervisor.AddAllwaysOnPeer ("LPERA_AnalogOuts")
Supervisor.AddAllwaysOnPeer ("DigitalOuts")
Supervisor.AddAllwaysOnPeer ("DigitalOuts2")
Supervisor.AddAllwaysOnPeer ("Soem")
Supervisor.AddAllwaysOnPeer ("BATTERY_AnalogIns")
Supervisor.AddAllwaysOnPeer ("RPERA_AnalogIns")
Supervisor.AddAllwaysOnPeer ("LPERA_AnalogIns")
Supervisor.AddAllwaysOnPeer ("DigitalIns")
Supervisor.AddAllwaysOnPeer ("DigitalIns2")
Supervisor.AddAllwaysOnPeer ("EnableAmps")
Supervisor.start()
